generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  userName      String?         @unique
  grantId       String?
  grantEmail    String?
  accounts      Account[]
  sessions      Session[]
  availability Availability[] 
  eventType   EventType[]


  
  
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}
 
model Availability {
  id String @id @default(uuid())

  day      Day
  fromTime String // e.g., '08:00'
  tillTime String // e.g., '18:00'
  hour0to1   Boolean @default(false)
  hour1to2   Boolean @default(false)
  hour2to3   Boolean @default(false)
  hour3to4   Boolean @default(false)
  hour4to5   Boolean @default(false)
  hour5to6   Boolean @default(false)
  hour6to7   Boolean @default(false)
  hour7to8   Boolean @default(false)
  hour8to9   Boolean @default(false)
  hour9to10  Boolean @default(false)
  hour10to11 Boolean @default(false)
  hour11to12 Boolean @default(false)
  hour12to13 Boolean @default(false)
  hour13to14 Boolean @default(false)
  hour14to15 Boolean @default(false)
  hour15to16 Boolean @default(false)
  hour16to17 Boolean @default(false)
  hour17to18 Boolean @default(false)
  hour18to19 Boolean @default(false)
  hour19to20 Boolean @default(false)
  hour20to21 Boolean @default(false)
  hour21to22 Boolean @default(false)
  hour22to23 Boolean @default(false)
  hour23to24 Boolean @default(false)
  isActive Boolean @default(true) // Toggle availability for the day

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model EventType {
  id String @id @default(uuid())
  title String
  duration Int
  url String
  description String
  active Boolean @default(true)
  videoCallSoftware String @default("Google Meet") 

  createdAt DateTime @default(now())
  User User? @relation(fields: [userId], references: [id])
  userId String?
  meetings Meeting[]
}

model Meeting {
  id String @id @default(uuid())
  eventTypeId String
  fromTime String
  date DateTime
  duration Int
  attendeeName String
  attendeeEmail String
  status String @default("SCHEDULED")
  
  eventType EventType @relation(fields: [eventTypeId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

